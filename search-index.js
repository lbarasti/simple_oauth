crystal_doc_search_index_callback({"repository_name":"simple_oauth","body":"[![GitHub release](https://img.shields.io/github/release/lbarasti/simple_oauth.svg)](https://github.com/lbarasti/simple_oauth/releases)\n![Build Status](https://github.com/lbarasti/simple_oauth/workflows/build/badge.svg)\n[![License](https://img.shields.io/badge/license-MIT-blue.svg)](https://opensource.org/licenses/MIT)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://lbarasti.github.io/simple_oauth)\n\n# simple_oauth\n\nA minimal implementation of the OAuth specification designed to build OAuth1.0 flows quickly.\n\n`SimpleOAuth` offers a small subset of the capabilities of its counterpart in the [Crystal standard library](https://crystal-lang.org/api/latest/OAuth.html). It makes it easier to swap HTTP client and is simpler to navigate - by means of being a lot smaller.\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     simple_oauth:\n       github: lbarasti/simple_oauth\n   ```\n\n2. Run `shards install`\n\n## Usage\n\nJust extend `SimpleOAuth::Consumer` and define the request, authenticate and access token URLs as class variables.\n```crystal\nrequire \"simple_oauth\"\n\nclass TumblrAPI < SimpleOAuth::Consumer\n  @@request_token_url = \"https://www.tumblr.com/oauth/request_token\"\n  @@authenticate_url = \"https://www.tumblr.com/oauth/authorize\"\n  @@access_token_url = \"https://www.tumblr.com/oauth/access_token\"\nend\n```\n\n#### Initializing a consumer client\nYou can now create a consumer client, provided a consumer key, a secret and a callback URL. You can get these from your OAuth provider.\n\n```crystal\nconsumer_key = ENV[\"TUMBLR_CONSUMER_KEY\"]\nconsumer_secret = ENV[\"TUMBLR_CONSUMER_SECRET\"]\ncallback_url = ENV[\"TUMBLR_CALLBACK_URL\"]\n\nconsumer = TumblrAPI.new(consumer_key, consumer_secret, callback_url)\n```\n\n#### Requesting an OAuth Request Token\nWhen a user requests to sign in with a selected OAuth provider, the first step for your app is to ask the provider for an OAuth Requests Token.\n```crystal\nrequest_token = consumer.get_token\n```\nYour app will then redirect the user to a provider-owned login screen - `TumblrAPI.authenticate_url(request_token)` in this example - where they can authorize your app to issue requests on their behalf.\n\n#### Upgrading to an OAuth Access Token\nAfter the sign-in, the user is redirected to your app via a white-listed callback URL. With the parameters included in the request, your app can now upgrade the request token to an access one.\n```crystal\naccess_token = consumer.upgrade_token(request_token, verifier)\n```\n\n#### How does this work in practice?\nCheck out the `/examples` folder to see the big picture. For example\n```\ncd example/tumblr_integration\nshards install\ncrystal src/server.cr # now head to localhost:8090\n```\n\n![tumblr demo](examples/tumblr_integration/oauth_flow.gif)\n\n## Contributing\n\n1. Fork it (<https://github.com/lbarasti/simple_oauth/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [lbarasti](https://github.com/lbarasti) - creator and maintainer\n","program":{"html_id":"simple_oauth/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"simple_oauth","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"simple_oauth/SimpleOAuth","path":"SimpleOAuth.html","kind":"module","full_name":"SimpleOAuth","name":"SimpleOAuth","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/simple_oauth/consumer.cr","line_number":3,"url":null},{"filename":"src/simple_oauth/signature.cr","line_number":4,"url":null}],"repository_name":"simple_oauth","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"simple_oauth/SimpleOAuth/Consumer","path":"SimpleOAuth/Consumer.html","kind":"class","full_name":"SimpleOAuth::Consumer","name":"Consumer","abstract":true,"superclass":{"html_id":"simple_oauth/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"simple_oauth/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"simple_oauth/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/simple_oauth/consumer.cr","line_number":4,"url":null}],"repository_name":"simple_oauth","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"simple_oauth/SimpleOAuth","kind":"module","full_name":"SimpleOAuth","name":"SimpleOAuth"},"doc":null,"summary":null,"class_methods":[{"id":"authenticate_url(request_token:String)-class-method","html_id":"authenticate_url(request_token:String)-class-method","name":"authenticate_url","doc":"Returns the `/authenticate` URL with the OAuth Request Token passed as query string parameter.\nThis is used in Step 2 of the 3-legged OAuth flow.","summary":"<p>Returns the <code>/authenticate</code> URL with the OAuth Request Token passed as query string parameter.</p>","abstract":false,"args":[{"name":"request_token","doc":null,"default_value":"","external_name":"request_token","restriction":"String"}],"args_string":"(request_token : String)","args_html":"(request_token : String)","location":{"filename":"src/simple_oauth/consumer.cr","line_number":49,"url":null},"def":{"name":"authenticate_url","args":[{"name":"request_token","doc":null,"default_value":"","external_name":"request_token","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@@authenticate_url + \"?oauth_token=\") + request_token"}}],"constructors":[{"id":"new(consumer_key:String,consumer_secret:String,callback_url:String)-class-method","html_id":"new(consumer_key:String,consumer_secret:String,callback_url:String)-class-method","name":"new","doc":"Creates a new `Consumer` with the specified credentials.","summary":"<p>Creates a new <code><a href=\"../SimpleOAuth/Consumer.html\">Consumer</a></code> with the specified credentials.</p>","abstract":false,"args":[{"name":"consumer_key","doc":null,"default_value":"","external_name":"consumer_key","restriction":"String"},{"name":"consumer_secret","doc":null,"default_value":"","external_name":"consumer_secret","restriction":"String"},{"name":"callback_url","doc":null,"default_value":"","external_name":"callback_url","restriction":"String"}],"args_string":"(consumer_key : String, consumer_secret : String, callback_url : String)","args_html":"(consumer_key : String, consumer_secret : String, callback_url : String)","location":{"filename":"src/simple_oauth/consumer.cr","line_number":13,"url":null},"def":{"name":"new","args":[{"name":"consumer_key","doc":null,"default_value":"","external_name":"consumer_key","restriction":"String"},{"name":"consumer_secret","doc":null,"default_value":"","external_name":"consumer_secret","restriction":"String"},{"name":"callback_url","doc":null,"default_value":"","external_name":"callback_url","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(consumer_key, consumer_secret, callback_url)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"get_token:TokenPair-instance-method","html_id":"get_token:TokenPair-instance-method","name":"get_token","doc":"Allows a Consumer application to obtain an OAuth Request Token to request user authorization.\n\nReturns a `TokenPair` representing the OAuth Request Token data.","summary":"<p>Allows a Consumer application to obtain an OAuth Request Token to request user authorization.</p>","abstract":false,"args":[],"args_string":" : TokenPair","args_html":" : <a href=\"../SimpleOAuth/Consumer/TokenPair.html\">TokenPair</a>","location":{"filename":"src/simple_oauth/consumer.cr","line_number":20,"url":null},"def":{"name":"get_token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"TokenPair","visibility":"Public","body":"auth_params = {\"oauth_callback\" => @callback_url}\nbody = exec_signed(:post, @@request_token_url, auth_params)\nConsumer.parse_token_response(body)\n"}},{"id":"upgrade_token(token:TokenPair,verifier:String):TokenPair-instance-method","html_id":"upgrade_token(token:TokenPair,verifier:String):TokenPair-instance-method","name":"upgrade_token","doc":"Converts the OAuth Request Token into an OAuth Access Token that can be used to call the API on the users' behalf.\nThis method uses both the consumer secret and the resource owner secret to sign the request.\nOAuth providers like Twitter expect the token's oauth_token_secret to be an empty string.\n\nReturns a `TokenPair` representing the OAuth Access Token data.","summary":"<p>Converts the OAuth Request Token into an OAuth Access Token that can be used to call the API on the users' behalf.</p>","abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"TokenPair"},{"name":"verifier","doc":null,"default_value":"","external_name":"verifier","restriction":"String"}],"args_string":"(token : TokenPair, verifier : String) : TokenPair","args_html":"(token : <a href=\"../SimpleOAuth/Consumer/TokenPair.html\">TokenPair</a>, verifier : String) : <a href=\"../SimpleOAuth/Consumer/TokenPair.html\">TokenPair</a>","location":{"filename":"src/simple_oauth/consumer.cr","line_number":35,"url":null},"def":{"name":"upgrade_token","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"TokenPair"},{"name":"verifier","doc":null,"default_value":"","external_name":"verifier","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"TokenPair","visibility":"Public","body":"user_auth = SimpleOAuth::Signature.new(@consumer_secret, token.oauth_token_secret)\nauth_params = {\"oauth_token\" => token.oauth_token, \"oauth_verifier\" => verifier}\nbody = exec_signed(:post, @@access_token_url, auth_params, {\"oauth_verifier\" => verifier}, auth = user_auth)\nConsumer.parse_token_response(body)\n"}}],"macros":[],"types":[{"html_id":"simple_oauth/SimpleOAuth/Consumer/CallbackNotConfirmed","path":"SimpleOAuth/Consumer/CallbackNotConfirmed.html","kind":"class","full_name":"SimpleOAuth::Consumer::CallbackNotConfirmed","name":"CallbackNotConfirmed","abstract":false,"superclass":{"html_id":"simple_oauth/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"simple_oauth/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"simple_oauth/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"simple_oauth/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/simple_oauth/consumer.cr","line_number":61,"url":null}],"repository_name":"simple_oauth","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"simple_oauth/SimpleOAuth/Consumer","kind":"class","full_name":"SimpleOAuth::Consumer","name":"Consumer"},"doc":"An exception signaling an anomaly in the callback URL.","summary":"<p>An exception signaling an anomaly in the callback URL.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"simple_oauth/SimpleOAuth/Consumer/TokenPair","path":"SimpleOAuth/Consumer/TokenPair.html","kind":"struct","full_name":"SimpleOAuth::Consumer::TokenPair","name":"TokenPair","abstract":false,"superclass":{"html_id":"simple_oauth/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"simple_oauth/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"simple_oauth/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"simple_oauth/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/simple_oauth/consumer.cr","line_number":54,"url":null}],"repository_name":"simple_oauth","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"simple_oauth/SimpleOAuth/Consumer","kind":"class","full_name":"SimpleOAuth::Consumer","name":"Consumer"},"doc":"A struct encapsulating OAuth Token and OAuth Token Secret.","summary":"<p>A struct encapsulating OAuth Token and OAuth Token Secret.</p>","class_methods":[],"constructors":[{"id":"new(oauth_token:String,oauth_token_secret:String)-class-method","html_id":"new(oauth_token:String,oauth_token_secret:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"oauth_token","doc":null,"default_value":"","external_name":"oauth_token","restriction":"String"},{"name":"oauth_token_secret","doc":null,"default_value":"","external_name":"oauth_token_secret","restriction":"String"}],"args_string":"(oauth_token : String, oauth_token_secret : String)","args_html":"(oauth_token : String, oauth_token_secret : String)","location":{"filename":"src/simple_oauth/consumer.cr","line_number":54,"url":null},"def":{"name":"new","args":[{"name":"oauth_token","doc":null,"default_value":"","external_name":"oauth_token","restriction":"String"},{"name":"oauth_token_secret","doc":null,"default_value":"","external_name":"oauth_token_secret","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(oauth_token, oauth_token_secret)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](idx:Int32)-instance-method","html_id":"[](idx:Int32)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"idx","doc":null,"default_value":"","external_name":"idx","restriction":"Int32"}],"args_string":"(idx : Int32)","args_html":"(idx : Int32)","location":{"filename":"src/simple_oauth/consumer.cr","line_number":55,"url":null},"def":{"name":"[]","args":[{"name":"idx","doc":null,"default_value":"","external_name":"idx","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[oauth_token, oauth_token_secret][idx]"}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/simple_oauth/consumer.cr","line_number":54,"url":null},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@oauth_token.clone, @oauth_token_secret.clone)"}},{"id":"copy_with(oauth_token_oauth_token=@oauth_token,oauth_token_secret_oauth_token_secret=@oauth_token_secret)-instance-method","html_id":"copy_with(oauth_token_oauth_token=@oauth_token,oauth_token_secret_oauth_token_secret=@oauth_token_secret)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_oauth_token","doc":null,"default_value":"@oauth_token","external_name":"oauth_token","restriction":""},{"name":"_oauth_token_secret","doc":null,"default_value":"@oauth_token_secret","external_name":"oauth_token_secret","restriction":""}],"args_string":"(oauth_token _oauth_token = @oauth_token, oauth_token_secret _oauth_token_secret = @oauth_token_secret)","args_html":"(oauth_token _oauth_token = @oauth_token, oauth_token_secret _oauth_token_secret = @oauth_token_secret)","location":{"filename":"src/simple_oauth/consumer.cr","line_number":54,"url":null},"def":{"name":"copy_with","args":[{"name":"_oauth_token","doc":null,"default_value":"@oauth_token","external_name":"oauth_token","restriction":""},{"name":"_oauth_token_secret","doc":null,"default_value":"@oauth_token_secret","external_name":"oauth_token_secret","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(_oauth_token, _oauth_token_secret)"}},{"id":"oauth_token:String-instance-method","html_id":"oauth_token:String-instance-method","name":"oauth_token","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":null,"def":{"name":"oauth_token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@oauth_token"}},{"id":"oauth_token_secret:String-instance-method","html_id":"oauth_token_secret:String-instance-method","name":"oauth_token_secret","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":null,"def":{"name":"oauth_token_secret","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@oauth_token_secret"}}],"macros":[],"types":[]}]},{"html_id":"simple_oauth/SimpleOAuth/Signature","path":"SimpleOAuth/Signature.html","kind":"class","full_name":"SimpleOAuth::Signature","name":"Signature","abstract":false,"superclass":{"html_id":"simple_oauth/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"simple_oauth/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"simple_oauth/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/simple_oauth/signature.cr","line_number":5,"url":null}],"repository_name":"simple_oauth","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"SignatureMethod","name":"SignatureMethod","value":"\"HMAC-SHA1\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"simple_oauth/SimpleOAuth","kind":"module","full_name":"SimpleOAuth","name":"SimpleOAuth"},"doc":null,"summary":null,"class_methods":[{"id":"escape(params:String):String-class-method","html_id":"escape(params:String):String-class-method","name":"escape","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"String"}],"args_string":"(params : String) : String","args_html":"(params : String) : String","location":{"filename":"src/simple_oauth/signature.cr","line_number":42,"url":null},"def":{"name":"escape","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"URI.encode_www_form(params, space_to_plus: false)"}},{"id":"nonce:String-class-method","html_id":"nonce:String-class-method","name":"nonce","doc":"generate a unique token your application should generate for each unique request","summary":"<p>generate a unique token your application should generate for each unique request</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/simple_oauth/signature.cr","line_number":38,"url":null},"def":{"name":"nonce","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"(Random::Secure.base64(32)).gsub(/[^a-zA-Z]/, \"\")"}},{"id":"parameter_string(parameters:Hash(String,String))-class-method","html_id":"parameter_string(parameters:Hash(String,String))-class-method","name":"parameter_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"Hash(String, String)"}],"args_string":"(parameters : Hash(String, String))","args_html":"(parameters : Hash(String, String))","location":{"filename":"src/simple_oauth/signature.cr","line_number":27,"url":null},"def":{"name":"parameter_string","args":[{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"parameters.map do |k, v|\n  \"#{Signature.escape(k)}=#{Signature.escape(v)}\"\nend.sort.join(\"&\")"}},{"id":"signature_base_string(http_method:String,base_url:String,parameter_string:String):String-class-method","html_id":"signature_base_string(http_method:String,base_url:String,parameter_string:String):String-class-method","name":"signature_base_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"http_method","doc":null,"default_value":"","external_name":"http_method","restriction":"String"},{"name":"base_url","doc":null,"default_value":"","external_name":"base_url","restriction":"String"},{"name":"parameter_string","doc":null,"default_value":"","external_name":"parameter_string","restriction":"String"}],"args_string":"(http_method : String, base_url : String, parameter_string : String) : String","args_html":"(http_method : String, base_url : String, parameter_string : String) : String","location":{"filename":"src/simple_oauth/signature.cr","line_number":31,"url":null},"def":{"name":"signature_base_string","args":[{"name":"http_method","doc":null,"default_value":"","external_name":"http_method","restriction":"String"},{"name":"base_url","doc":null,"default_value":"","external_name":"base_url","restriction":"String"},{"name":"parameter_string","doc":null,"default_value":"","external_name":"parameter_string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"#{http_method.upcase}&#{Signature.escape(base_url)}&#{Signature.escape(parameter_string)}\""}}],"constructors":[{"id":"new(consumer_secret:String,token_secret:String=&quot;&quot;)-class-method","html_id":"new(consumer_secret:String,token_secret:String=&quot;&quot;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"consumer_secret","doc":null,"default_value":"","external_name":"consumer_secret","restriction":"String"},{"name":"token_secret","doc":null,"default_value":"\"\"","external_name":"token_secret","restriction":"String"}],"args_string":"(consumer_secret : String, token_secret : String = <span class=\"s\">&quot;&quot;</span>)","args_html":"(consumer_secret : String, token_secret : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/simple_oauth/signature.cr","line_number":8,"url":null},"def":{"name":"new","args":[{"name":"consumer_secret","doc":null,"default_value":"","external_name":"consumer_secret","restriction":"String"},{"name":"token_secret","doc":null,"default_value":"\"\"","external_name":"token_secret","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(consumer_secret, token_secret)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"signature(http_method,base_url,parameters)-instance-method","html_id":"signature(http_method,base_url,parameters)-instance-method","name":"signature","doc":null,"summary":null,"abstract":false,"args":[{"name":"http_method","doc":null,"default_value":"","external_name":"http_method","restriction":""},{"name":"base_url","doc":null,"default_value":"","external_name":"base_url","restriction":""},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":""}],"args_string":"(http_method, base_url, parameters)","args_html":"(http_method, base_url, parameters)","location":{"filename":"src/simple_oauth/signature.cr","line_number":21,"url":null},"def":{"name":"signature","args":[{"name":"http_method","doc":null,"default_value":"","external_name":"http_method","restriction":""},{"name":"base_url","doc":null,"default_value":"","external_name":"base_url","restriction":""},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"param_string = Signature.parameter_string(parameters)\nbase_string = Signature.signature_base_string(http_method, base_url, param_string)\nself.signature(base_string)\n"}},{"id":"signature(data:String):String-instance-method","html_id":"signature(data:String):String-instance-method","name":"signature","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"}],"args_string":"(data : String) : String","args_html":"(data : String) : String","location":{"filename":"src/simple_oauth/signature.cr","line_number":16,"url":null},"def":{"name":"signature","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"binary = OpenSSL::HMAC.digest(:sha1, self.signing_key, data)\n(Base64.encode(binary)).chomp\n"}},{"id":"signing_key:String-instance-method","html_id":"signing_key:String-instance-method","name":"signing_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/simple_oauth/signature.cr","line_number":11,"url":null},"def":{"name":"signing_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"[@consumer_secret, @token_secret].map do |secret|\n  Signature.escape(secret)\nend.join(\"&\")"}}],"macros":[],"types":[]}]},{"html_id":"simple_oauth/SimpleOauth","path":"SimpleOauth.html","kind":"module","full_name":"SimpleOauth","name":"SimpleOauth","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/simple_oauth.cr","line_number":3,"url":null}],"repository_name":"simple_oauth","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"(File.read_lines(File.join(File.dirname(\"/__w/simple_oauth/simple_oauth/src/simple_oauth.cr\"), \"..\", \"shard.yml\"))).find(&.match(/^version: (.*)/)) && $~[1]","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}})